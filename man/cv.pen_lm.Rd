% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cv.pen_lm.R
\name{cv.pen_lm}
\alias{cv.pen_lm}
\title{Cross-validation for a penalized Cox or cause-specific Cox landmark
supermodel}
\usage{
cv.pen_lm(
  x,
  y,
  id_col,
  alpha = 1,
  nfolds = 10,
  type.measure = "deviance",
  seed = NULL,
  foldid = NULL,
  ...
)
}
\arguments{
\item{x}{An "LMdataframe", which can be created by running \code{\link[=stack_data]{stack_data()}} and
\code{\link[=add_interactions]{add_interactions()}}.}

\item{y}{Optional, a vector of column names of the data stored in \code{lmdata}
that are to be used as dependent variables. If not specified, it is assumed
that all non-response variables are the dependent variables.}

\item{id_col}{Column name or index that identifies individuals in data.
Used to ensure individuals appear in the same cross-validation sets.}

\item{alpha}{The elastic net mixing parameter: Lies between 0 and 1. At 1,
the penalty is the LASSO penalty, and at 0, the penalty is the ridge
penalty. The default is 1.}

\item{nfolds}{Number of folds in k-fold cross validation. Default is 10.}

\item{type.measure}{Loss for cross-validation. Currently the only option is
"deviance" which is the partial-likelihood for the Cox model. If using
cause-specific Cox models, this is evaluated on each model separately.}

\item{seed}{Set a seed.}

\item{foldid}{Optional, specify which fold each individual is in.}

\item{...}{Additional arguments to \code{cv.glmnet()}.}
}
\value{
An object of class cv.pen_lm. This is a list of cv.glmnet objects
(one for each cause-specific Cox model or a list of length one for a
regular Cox model). The object also has attributes \code{survival.type}
(\code{competing.risk} or \code{survival}) and \code{lmdata} and \code{xcols} which store the
inputs if given.
Functions \code{print()} and \code{plot()} exist for the object. To make predictions,
see \code{\link[=dynamic_lm.cv.pen_lm]{dynamic_lm.cv.pen_lm()}}.
}
\description{
Fit by calling \code{\link[glmnet:cv.glmnet]{glmnet::cv.glmnet()}}. As in \code{cv.glmnet}, k-fold cross validation is
performed. This produces a plot and returns optimal values for \code{lambda}, the
penalization parameter. Input can be as typically done for
\code{cv.glmnet} in the form of \code{x} and \code{y} which are a matrix and response object
or with a landmark super dataset specifying the dependent columns in \code{y}.
}
\examples{
\dontrun{
}
}
\seealso{
\code{\link[=print.cv.pen_lm]{print.cv.pen_lm()}}, \code{\link[=plot.cv.pen_lm]{plot.cv.pen_lm()}}, \code{\link[=dynamic_lm.cv.pen_lm]{dynamic_lm.cv.pen_lm()}}
}
