% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dynamic_lm.R
\name{dynamic_lm.cv.pen_lm}
\alias{dynamic_lm.cv.pen_lm}
\title{Fit a penalized cross-validated coxph or CSC super model}
\usage{
\method{dynamic_lm}{cv.pen_lm}(object, lambda = "lambda.min", x = FALSE, ...)
}
\arguments{
\item{object}{A fitted object of class "cv.pen_lm". This can be created by
calling \code{cv.pen_lm} using arguments \code{lmdata} and \code{xcols}.}

\item{lambda}{Value of the penalty parameter \code{lambda} to fit a model.
Default is "lambda.min"; "lambda.1se" can also be used or a specific value
can be input. For cause-specific Cox super models,
this must be a list or vector of values: one for each cause.}

\item{x}{Logical value. If set to true, \code{lmdata} is stored in the returned
object. This is required for internal validation.}

\item{...}{Additional arguments to pass to \code{\link[survival:coxph]{survival::coxph()}} or
\code{\link[riskRegression:CSC]{riskRegression::CSC()}}}
}
\value{
An object of class "penLMcoxph" or "penLMCSC" with components:
\itemize{
\item model: fitted model
\item type: as input
\item w, func_covars, func_lms, lm_covs, all_covs, outcome: as in \code{lmdata}
\item LHS: the LHS of the input formula
\item linear.predictors: the vector of linear predictors, one per subject. Note
that this vector has not been centered.
\item lambda: the values of lambda for which this model has been fit.
}
}
\description{
Use one value of \code{lambda} to fit a model from which predictions can be made.
}
\details{
The Breslow method is used for handling ties, as we use the \code{glmnet}
package which does the same.
}
\examples{
data(relapse)
outcome <- list(time = "Time", status = "event")
covars <- list(fixed = c("male", "stage", "bmi"),
               varying = c("treatment"))
w <- 60; lms <- c(0, 6, 12, 18)
lmdata <- stack_data(relapse, outcome, lms, w, covars, format = "long",
                     id = "ID", rtime = "T_txgiven")
lmdata <- add_interactions(lmdata, func_covars = c("linear", "quadratic"),
                           func_lms = c("linear", "quadratic"))

# Fit cross-validated coefficient path
cv_model <- cv.pen_lm(lmdata, alpha = 1)

# Fit penalized supermodel
supermodel_pen <- dynamic_lm(cv_model, lambda = "lambda.min")
print(supermodel_pen, all_causes = TRUE)

# Plot largest coefficients
par(mar = c(5, 10, 1, 7))
plot(supermodel_pen, max_coefs = 5, all_causes = TRUE)

# Plot dynamic hazard ratios
par(mfrow = c(1,2))
plot(supermodel_pen, HR = TRUE)

}
